h1. Welcome to OrganizationChart Designer

This modeler provides a set of common diagrams to work with Organization Chart. 

These plugins are released under the EPL Open-Source License.

More details about features, screenshots, release notes, dependencies here:
 * https://github.com/ejuliot/OrganizationChart-Designer

This tool isn't yet stable. 


h2. Download

Download the last version of OrganizationChart here: https://github.com/ejuliot/OrganizationChart-Designer/releases

h3. Update Sites

Nightly (Eclipse and Sirius based) : https://github.com/ejuliot/OrganizationChart-Designer/releases



h2. Features and Available representations



h3. Overview

Give an overview of the organization chart of your company :
* how many locations
* how many structures
* how many employees and managers

This diagram is automatically opened as it is the entry point.


###. Start of user code Overview
	!documentation/images/generated/TravelAgency Organization Overview.jpg!
###. End of user code
	
h3. Locations with Employees

Show all locations and the list of employees located at each location.


###. Start of user code Locations with Employees
	!documentation/images/handcreated/Locations Tree.png!
###. End of user code
	
h3. Locations

Show a map of some locations.
Some pre-define maps are available for a worlwide diagram, europe, US, and some countries.
You can use a pointer to point on the map where is precisely this location.
A layer is available to show employees without any locations.
Several location diagrams could be created to show several regions, different levels of zoom.


	!documentation/images/generated/Locations Map.jpg!
	
h3. Structures Tree

Show all structures as a containment tree


###. Start of user code Structures Tree
	!documentation/images/handcreated/Structures Tree.png!
###. End of user code
	
h3. SubStructures with Employees

Show the substructure of a current structure, and all its employees.


###. Start of user code SubStructures with Employees
	!documentation/images/handcreated/Direction Structure With Employees Tree.png!
###. End of user code
	
h3. Structures Organization

Main diagram to show all structures and all employees.
Managers are shown with bold and underline style.
Double clic on one employee to make him manager of his structure.


	!documentation/images/generated/Structures Organization.jpg!
	
h3. Structures Relationship

Relation between structure.
You can active a layer to analyse the size of each structure with dynamic size computed from nomber of employees.

A template is available to easily initiate an organization chart with a standard organization.


	!documentation/images/generated/Structures Relationship.jpg!
	
h3. Structure Composition

Details of one organization.
It shows also sub structures.
You can easily drag and drop functions to sub structures.


###. Start of user code Structure Composition
	!documentation/images/generated/Direction Composition.jpg!
###. End of user code
	
h3. Management Tree

All employees as a tree from the boss to any employees, organized by management responsability.


###. Start of user code Management Tree
	!documentation/images/handcreated/Management Tree.png!
###. End of user code
	
h3. Management Hierarchy

All employees organized by hierarchy link.
A layer is available to show picture. To automaticly associate an employee to a picture, just create an image file (.svg, .png or .jpg) with the name composed of "firstname lastname" inside a "pictures" folder.


	!documentation/images/generated/Management Hierarchy.jpg!
	
h3. Manager Responsibilities

Detail of each employee, and his management responsibilities


###. Start of user code Manager Responsibilities
	!documentation/images/generated/Alan Brooks Manager Responsabilities.jpg!
###. End of user code
	
h3. Managers and Structures

Show all structures and their managers. Links are based on relationship between managers and structures, not on hierarchy between managers.


	!documentation/images/generated/Managers and Structures.jpg!
	
h3. All Employees with their Structures

Show all structures as a container with inside them the picture of employees.
Several filters are available to select which information need to be shown.


	!documentation/images/generated/All Employees with their Structures.jpg!
	
h3. Employees Description

Table to view and edit details of all employees.


###. Start of user code Employees Description
	!documentation/images/handcreated/Employees Description.png!
###. End of user code
	
h3. Functions Allocation

Allocation of functions between employees of a structure.


###. Start of user code Functions Allocation
	!documentation/images/generated/Direction Functions Allocation.jpg!
###. End of user code
	
h3. Functions Matrix

Matrix of all functions, organized by structures. Columns are for all employees.


###. Start of user code Functions Matrix
	!documentation/images/handcreated/Functions Matrix.png!
###. End of user code
	
h3. Functions by Structure Matrix

Functions Matrix focus on one specific structure and its direct sunstructures. Only employee which belongs to these structures are shown in columns.


###. Start of user code Functions by Structure Matrix
	!documentation/images/handcreated/Direction Functions Matrix.png!
###. End of user code
	






h1. Contributing

Just use github, fork our "main repository":https://github.com/ejuliot/OrganizationChart-Designer do your changes and trigger a "pull request":https://help.github.com/articles/using-pull-requests , we'll be happy to consider it for inclusion.
To setup your dev environment, just download Obeo Designer 9, configure EGit and import all these projects.  

h2. Building the updatesite for Sirius

You'll need "Apache Maven 3": http://maven.apache.org/download.html to be installed on your computer.

To launch the build, go to the root of your git repository and type :

@mvn clean package@

Maven will bootstrap itself, download all the dependencies and build OrganizationChart. The output of the build is a p2 repository (an update site) generated here : 

@features/org.obeonetwork.dsl.organizationchart.update/target/repository@

To install it in an Eclipse installation use @Help/Install New Software@ and point to this location.

Launching the test is not harder, just type :

@mvn clean verify@

Maven will launch the tests and give you the result. 
Code coverage is captured thanks to Jacoco.

h2. Building the standalone application

After building the update sites, you can create a standalone application for end user which are not Eclipse users.

Go to the directory:

@packaging/org.obeonetwork.dsl.organizationchart.product@

Launch:

@mvn clean package@

You will find several zip file for each platform at:

@packaging/org.obeonetwork.dsl.organizationchart.product/target/products@



 


  
